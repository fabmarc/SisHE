<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Enable method level Spring Security by annotations -->
	<sec:global-method-security pre-post-annotations="enabled" />
	
	<sec:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
	
		<!-- Page level Spring Security : Permit access to resources in /paginas/unsecure/** -->
		<sec:intercept-url pattern="/paginas/unsecure/**"
			access="permitAll" />

		<sec:intercept-url pattern="/paginas/solicitacao/cadastrarSolicitacao.jsf"
			access="hasAnyRole('ROLE_FUNCIONARIO')" />

		<sec:intercept-url pattern="/paginas/usuario/alterarSenha.jsf"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_GERENTE', 'ROLE_LIDER', 'ROLE_FUNCIONARIO')" />

		<sec:intercept-url pattern="/paginas/solicitacao/**"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_GERENTE', 'ROLE_LIDER', 'ROLE_FUNCIONARIO')" />

		<!-- Page level Spring Security : Intercept access to resources in /paginas/** -->
		<sec:intercept-url pattern="/paginas/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_GERENTE')" />

		<!-- Page level Spring Security : Enable Primefaces -->
		<sec:intercept-url pattern="/javax.faces.resource/**"
			access="permitAll" />

		<!-- Page level Spring Security : Intercept access to resources in /** -->
		<sec:intercept-url pattern="/**"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_GERENTE', 'ROLE_LIDER', 'ROLE_FUNCIONARIO')" />

		<!-- Define login page for Spring Security -->
		<sec:form-login login-page="/paginas/unsecure/login.jsf" />

		<!-- Define logout properties for Spring Security -->
		<sec:logout invalidate-session="true" delete-cookies="true"
			logout-success-url="/"></sec:logout>

	</sec:http>


	<!-- Set UserDetailsServiceImpl class as the authentication Manager for Spring Security -->
	<sec:authentication-manager id="authenticationManager" alias="authenticationManager">
		<sec:authentication-provider 
			user-service-ref="userService">
			<sec:password-encoder hash="plaintext"></sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<!--
	<sec:user-service id="userService">
		<sec:user name="manager" password="letmein" authorities="ROLE_MANAGER" />
		<sec:user name="developer" password="letmein" authorities="ROLE_DEVELOPER" />
		<sec:user name="admin" password="admin" authorities="ROLE_MANAGER,ROLE_DEVELOPER" />
	</sec:user-service>	
	-->
	
    <sec:jdbc-user-service id="userService" data-source-ref="dataSource"
       users-by-username-query="select login, senha, 'true' as enable from usuario where login=?"
       authorities-by-username-query="SELECT USUARIO.LOGIN, unnest(string_to_array(role, ', ')) FROM USUARIO INNER JOIN CARGO ON (CARGO.ID = USUARIO.ID_CARGO) where login=?" />

</beans:beans>

